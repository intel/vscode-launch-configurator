{    
    " " : {
      "prefix": "intell", 
      "body": [
        "intell::"
      ],
      "description": " "
    },
    "fpga_register" : {
        "prefix": "intell::fpga_register",
        "body": [
          "intell::fpga_register"
        ],
        "description": "Forces a variable or array to be carried through the pipeline in registers."
    },
    "fpga_memory('impl_type')" : {
        "prefix": "intell::fpga_memory",
        "body": [
          "intell::fpga_memory"
        ],
        "description": "Forces a variable or array to be implemented as embedded memory. The optional string parameter impl_type can be BLOCK_RAM or MLAB."
    },
    "numbanks(N)" : {
        "prefix": "intell::numbanks",
        "body": [
          "intell::numbanks"
        ],
        "description": "Specifies that the memory implementing the variable or array must have N memory banks."
    },
    "bankwidth(W)" : {
        "prefix": "intell::bankwidth",
        "body": [
          "intell::bankwidth"
        ],
        "description": "Specifies that the memory implementing the variable or array must be W bytes wide."
    },
    "singlepump" : {
        "prefix": "intell::singlepump",
        "body": [
          "intell::singlepump"
        ],
        "description": "Specifies that the memory implementing the variable or array should be clocked at the same rate as the accesses to it."
    },
    "doublepump" : {
        "prefix": "intell::doublepump",
        "body": [
          "intell::doublepump"
        ],
        "description": "Specifies that the memory implementing the variable or array should be clocked at twice the rate as the accesses to it."
    },
    "max_replicates(N)" : {
        "prefix": "intell::max_replicates",
        "body": [
          "intell::max_replicates"
        ],
        "description": "Specifies that a maximum of N replicates should be created to enable simultaneous reads from the datapath."
    },
    "private_copies(N)" : {
        "prefix": "intell::private_copies",
        "body": [
          "intell::private_copies"
        ],
        "description": "Specifies that a maximum of N private copies should be created to enable concurrent execution of N pipelined threads."
    },
    "simple_dual_port" : {
        "prefix": "intell::simple_dual_port",
        "body": [
          "intell::simple_dual_port"
        ],
        "description": "Specifies that the memory implementing the variable or array should have no port that services both reads and writes."
    },
    "merge('key', 'type')" : {
        "prefix": "intell::merge",
        "body": [
          "intell::merge"
        ],
        "description": "Merge two or more variables or arrays in the same scope width-wise or depth-wise. All variables with the same key string are merged into the same memory system. The string type can be either width or depth."
    },
    "bank_bits(b0, b1,..., bn)" : {
        "prefix": "intell::bank_bits",
        "body": [
          "intell::bank_bits"
        ],
        "description": "Specifies that the local memory addresses should use bits (b0, b1,..., bn) for bank-selection, where (b0, b1,..., bn) are indicated in terms of word-addressing. The bits of the local memory address not included in (b0, b1,..., bn) will be used for word-selection in each bank."
    }
}
